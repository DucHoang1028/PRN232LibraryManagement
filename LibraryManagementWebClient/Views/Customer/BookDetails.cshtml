@model Book
@{
    ViewData["Title"] = Model.Title;
}

<div class="row mb-4">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Customer" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Customer" asp-action="Catalog">Catalog</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h3 class="mb-0">
                    <i class="bi bi-book"></i> @Model.Title
                </h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">ISBN:</dt>
                            <dd class="col-sm-8">@Model.Isbn</dd>

                            <dt class="col-sm-4">Author(s):</dt>
                            <dd class="col-sm-8">
                                @if (Model.BookAuthors?.Any() == true)
                                {
                                    @string.Join(", ", Model.BookAuthors.Select(ba => $"{ba.Author?.FirstName} {ba.Author?.LastName}"))
                                }
                                else
                                {
                                    <span class="text-muted">Not specified</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Publisher:</dt>
                            <dd class="col-sm-8">@Model.Publisher?.Name</dd>

                            <dt class="col-sm-4">Language:</dt>
                            <dd class="col-sm-8">@Model.Language</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Publication Date:</dt>
                            <dd class="col-sm-8">@Model.PublicationDate.ToString("MMMM dd, yyyy")</dd>

                            <dt class="col-sm-4">Categories:</dt>
                            <dd class="col-sm-8">
                                @if (Model.BookCategories?.Any() == true)
                                {
                                    @string.Join(", ", Model.BookCategories.Select(bc => bc.Category?.Name))
                                }
                                else
                                {
                                    <span class="text-muted">Not categorized</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Rack Number:</dt>
                            <dd class="col-sm-8">@Model.RackNumber</dd>

                            <dt class="col-sm-4">Barcode:</dt>
                            <dd class="col-sm-8">@Model.Barcode</dd>
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mt-3">
                        <h6>Description:</h6>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                }

                <div class="row mt-3">
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-primary mb-0">@Model.TotalCopies</h4>
                            <small class="text-muted">Total Copies</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-success mb-0">@Model.AvailableCopies</h4>
                            <small class="text-muted">Available Copies</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-info mb-0">@(Model.TotalCopies - Model.AvailableCopies)</h4>
                            <small class="text-muted">Checked Out</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow mb-3">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-gear"></i> Actions
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (User.IsInRole("Member") && Model.AvailableCopies > 0)
                    {
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#checkoutModal">
                            <i class="bi bi-cart-plus"></i> Checkout Book
                        </button>
                    }
                    else if (User.IsInRole("Guest"))
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i> Please log in as a member to checkout books.
                        </div>
                    }
                    else if (Model.AvailableCopies == 0)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i> This book is currently out of stock.
                        </div>
                    }

                    <a asp-controller="Customer" asp-action="Catalog" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Catalog
                    </a>
                </div>
            </div>
        </div>

        @if (User.IsInRole("Staff"))
        {
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-tools"></i> Staff Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-controller="Books" asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-warning">
                            <i class="bi bi-pencil"></i> Edit Book
                        </a>
                        <a asp-controller="Books" asp-action="Delete" asp-route-id="@Model.BookId" class="btn btn-danger">
                            <i class="bi bi-trash"></i> Delete Book
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Checkout Modal -->
@if (User.IsInRole("Member") && Model.AvailableCopies > 0)
{
    <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkoutModalLabel">
                        <i class="bi bi-cart-plus"></i> Checkout Book
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Customer" asp-action="CheckoutBook" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="bookId" value="@Model.BookId" />
                        
                        <div class="mb-3">
                            <label class="form-label">Book Title</label>
                            <input type="text" class="form-control" value="@Model.Title" readonly />
                        </div>

                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date *</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" required 
                                   min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>

                        <div class="mb-3">
                            <label for="endDate" class="form-label">End Date *</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" required 
                                   min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                        </div>

                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i> 
                            <strong>Loan Period:</strong> Maximum 14 days. Please select appropriate start and end dates.
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Confirm Checkout
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Validate date range
        document.getElementById('startDate').addEventListener('change', function() {
            const startDate = new Date(this.value);
            const endDateInput = document.getElementById('endDate');
            const minEndDate = new Date(startDate);
            minEndDate.setDate(minEndDate.getDate() + 1);
            const maxEndDate = new Date(startDate);
            maxEndDate.setDate(maxEndDate.getDate() + 14);
            
            endDateInput.min = minEndDate.toISOString().split('T')[0];
            endDateInput.max = maxEndDate.toISOString().split('T')[0];
        });

        document.getElementById('endDate').addEventListener('change', function() {
            const startDate = new Date(document.getElementById('startDate').value);
            const endDate = new Date(this.value);
            const diffTime = Math.abs(endDate - startDate);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            
            if (diffDays > 14) {
                alert('Loan period cannot exceed 14 days.');
                this.value = '';
            }
        });
    </script>
} 