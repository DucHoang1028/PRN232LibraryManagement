@model Book
@{
    ViewData["Title"] = Model.Title;
    var reviews = ViewBag.Reviews as List<Review> ?? new List<Review>();
    var averageRating = ViewBag.AverageRating as double? ?? 0;
    var ratingCount = ViewBag.RatingCount as int? ?? 0;
    var userReview = ViewBag.UserReview as Review;
    var canReview = User.Identity?.IsAuthenticated == true ? (userReview == null) : true;
}

<div class="row mb-4">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Customer" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Customer" asp-action="Catalog">Catalog</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">
                        <i class="bi bi-book"></i> @Model.Title
                    </h3>
                    @if (ratingCount > 0)
                    {
                        <div class="text-warning">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Round(averageRating))
                                {
                                    <i class="bi bi-star-fill"></i>
                                }
                                else if (i - 0.5 <= averageRating)
                                {
                                    <i class="bi bi-star-half"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star"></i>
                                }
                            }
                            <span class="text-white ms-2">@averageRating.ToString("0.0") (@ratingCount @(ratingCount == 1 ? "review" : "reviews"))</span>
                        </div>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">ISBN:</dt>
                            <dd class="col-sm-8">@Model.Isbn</dd>

                            <dt class="col-sm-4">Author(s):</dt>
                            <dd class="col-sm-8">
                                @if (Model.BookAuthors?.Any() == true)
                                {
                                    @string.Join(", ", Model.BookAuthors.Select(ba => $"{ba.Author?.FirstName} {ba.Author?.LastName}"))
                                }
                                else
                                {
                                    <span class="text-muted">Not specified</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Publisher:</dt>
                            <dd class="col-sm-8">@Model.Publisher?.Name</dd>

                            <dt class="col-sm-4">Language:</dt>
                            <dd class="col-sm-8">@Model.Language</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Publication Date:</dt>
                            <dd class="col-sm-8">@Model.PublicationDate.ToString("MMMM dd, yyyy")</dd>

                            <dt class="col-sm-4">Categories:</dt>
                            <dd class="col-sm-8">
                                @if (Model.BookCategories?.Any() == true)
                                {
                                    @string.Join(", ", Model.BookCategories.Select(bc => bc.Category?.Name))
                                }
                                else
                                {
                                    <span class="text-muted">Not categorized</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Rack Number:</dt>
                            <dd class="col-sm-8">@Model.RackNumber</dd>

                            <dt class="col-sm-4">Barcode:</dt>
                            <dd class="col-sm-8">@Model.Barcode</dd>
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mt-3">
                        <h6>Description:</h6>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                }

                <div class="row mt-3">
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-primary mb-0">@Model.TotalCopies</h4>
                            <small class="text-muted">Total Copies</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-success mb-0">@Model.AvailableCopies</h4>
                            <small class="text-muted">Available Copies</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center p-3 border rounded">
                            <h4 class="text-info mb-0">@(Model.TotalCopies - Model.AvailableCopies)</h4>
                            <small class="text-muted">Checked Out</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Reviews Section -->
        <div class="card shadow mt-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-star"></i> Reviews and Ratings
                </h5>
                <div class="text-muted small">
                    <span class="badge bg-primary rounded-pill">@ratingCount @(ratingCount == 1 ? "review" : "reviews")</span>
                </div>
            </div>
            <div class="card-body">
                @if (ratingCount > 0)
                {
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center mb-2">
                                <div class="me-2">
                                    <span class="display-4">@averageRating.ToString("0.0")</span>
                                </div>
                                <div>
                                    <div class="text-warning mb-1">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Round(averageRating))
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            else if (i - 0.5 <= averageRating)
                                            {
                                                <i class="bi bi-star-half"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star"></i>
                                            }
                                        }
                                    </div>
                                    <div class="text-muted small">Based on @ratingCount @(ratingCount == 1 ? "review" : "reviews")</div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="rating-breakdown">
                                @{
                                    var counts = new int[5];
                                    foreach (var r in reviews)
                                    {
                                        counts[r.Rating - 1]++;
                                    }
                                    
                                    for (int i = 5; i >= 1; i--)
                                    {
                                        var count = counts[i - 1];
                                        var percent = ratingCount > 0 ? (count * 100 / ratingCount) : 0;
                                        <div class="d-flex align-items-center mb-1">
                                            <div class="me-2 text-nowrap">@i <i class="bi bi-star-fill text-warning"></i></div>
                                            <div class="progress flex-grow-1" style="height: 8px;">
                                                <div class="progress-bar bg-warning" role="progressbar" style="width: @percent%;" 
                                                     aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100"></div>
                                            </div>
                                            <div class="ms-2 text-nowrap small">@count</div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }

                @if (canReview)
                {
                    <form asp-controller="Customer" asp-action="AddReview" method="post" id="reviewForm">
                        <input type="hidden" name="BookId" value="@Model.BookId" />
                        <div class="mb-3">
                            <label class="form-label">Your Rating</label>
                            <div class="rating-input">
                                <div class="rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" id="star@i" name="Rating" value="@i" required />
                                        <label for="star@i"><i class="bi bi-star-fill"></i></label>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="comment" class="form-label">Your Review (Optional)</label>
                            <textarea id="comment" name="Comment" class="form-control" rows="4" maxlength="1000" placeholder="Share your thoughts about this book"></textarea>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" id="submitReview">
                                <i class="bi bi-check-circle"></i> Submit Review
                            </button>
                        </div>
                    </form>
                    <hr />
                }
                else if (User.Identity?.IsAuthenticated == true && userReview != null)
                {
                    <div class="alert alert-info mb-4">
                        <h6>Your Review</h6>
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="text-warning mb-2">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="bi @(i <= userReview.Rating ? "bi-star-fill" : "bi-star")"></i>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(userReview.Comment))
                                {
                                    <p class="mb-0">@userReview.Comment</p>
                                }
                            </div>
                            <div>
                                <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editReviewModal">
                                    <i class="bi bi-pencil"></i> Edit
                                </button>
                                <form asp-controller="Customer" asp-action="DeleteReview" method="post" class="d-inline">
                                    <input type="hidden" name="ReviewId" value="@userReview.ReviewId" />
                                    <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete your review?')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <hr />
                }
                
                @if (reviews.Any())
                {
                    <div class="review-list">
                        @foreach (var review in reviews.Where(r => User.IsInRole("Member") ? r.MemberId != (userReview?.MemberId ?? Guid.Empty) : true))
                        {
                            <div class="review-item mb-4">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-0">@review.MemberName</h6>
                                        <div class="text-warning mb-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="bi @(i <= review.Rating ? "bi-star-fill" : "bi-star")"></i>
                                            }
                                        </div>
                                        <small class="text-muted">@review.FormattedDate</small>
                                    </div>
                                    @if (User.IsInRole("Staff"))
                                    {
                                        <form asp-controller="Customer" asp-action="DeleteReview" method="post">
                                            <input type="hidden" name="ReviewId" value="@review.ReviewId" />
                                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this review?')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(review.Comment))
                                {
                                    <p class="mt-2 mb-0">@review.Comment</p>
                                }
                            </div>
                            @if (review != reviews.Last())
                            {
                                <hr />
                            }
                        }
                    </div>
                }
                else
                {
                    <div class="text-center p-4">
                        <i class="bi bi-chat-left-text fs-1 text-muted"></i>
                        <p class="mt-3">No reviews yet. Be the first to review this book!</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow mb-3">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-gear"></i> Actions
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (User.IsInRole("Member") && Model.AvailableCopies > 0)
                    {
                        @if (ViewBag.HasThisBookCheckedOut == true)
                        {
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i> You already have this book checked out.
                            </div>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#checkoutModal">
                                <i class="bi bi-cart-plus"></i> Checkout Book
                            </button>
                        }

                        @if (ViewBag.HasUnreturnedBooks == true)
                        {
                            <div class="alert alert-warning mt-3">
                                <i class="bi bi-exclamation-triangle-fill"></i> You currently have unreturned books. Remember to return them on time to avoid fines.
                            </div>
                        }

                        @if (ViewBag.HasOverdueBooks == true)
                        {
                            <div class="alert alert-danger mt-3">
                                <i class="bi bi-exclamation-triangle-fill"></i> <strong>Warning:</strong> You have overdue books. Please return them before checking out new books.
                            </div>
                        }
                    }
                    else if (User.IsInRole("Guest"))
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i> Please log in as a member to checkout books.
                        </div>
                    }
                    else if (Model.AvailableCopies == 0)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i> This book is currently out of stock.
                        </div>
                    }

                    <a asp-controller="Customer" asp-action="Catalog" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Catalog
                    </a>
                </div>
            </div>
        </div>

        @if (User.IsInRole("Staff"))
        {
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-tools"></i> Staff Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-controller="Books" asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-warning">
                            <i class="bi bi-pencil"></i> Edit Book
                        </a>
                        <a asp-controller="Books" asp-action="Delete" asp-route-id="@Model.BookId" class="btn btn-danger">
                            <i class="bi bi-trash"></i> Delete Book
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Checkout Modal -->
@if (User.IsInRole("Member") && Model.AvailableCopies > 0)
{
    <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkoutModalLabel">
                        <i class="bi bi-cart-plus"></i> Checkout Book
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Customer" asp-action="CheckoutBook" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="bookId" value="@Model.BookId" />
                        
                        <div class="mb-3">
                            <label class="form-label">Book Title</label>
                            <input type="text" class="form-control" value="@Model.Title" readonly />
                        </div>

                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date *</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" required 
                                   min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>

                        <div class="mb-3">
                            <label for="endDate" class="form-label">End Date *</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" required 
                                   min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                        </div>

                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i> 
                            <strong>Loan Period:</strong> Maximum 14 days. Please select appropriate start and end dates.
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Confirm Checkout
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<!-- Edit Review Modal -->
@if (User.IsInRole("Member") && userReview != null)
{
    <div class="modal fade" id="editReviewModal" tabindex="-1" aria-labelledby="editReviewModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editReviewModalLabel">
                        <i class="bi bi-pencil"></i> Edit Your Review
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Customer" asp-action="UpdateReview" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="ReviewId" value="@userReview.ReviewId" />
                        <input type="hidden" name="BookId" value="@Model.BookId" />
                        
                        <div class="mb-3">
                            <label class="form-label">Your Rating</label>
                            <div class="rating-input">
                                <div class="rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" id="editStar@i" name="Rating" value="@i" @(userReview.Rating == i ? "checked" : "") required />
                                        <label for="editStar@i"><i class="bi bi-star-fill"></i></label>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="editComment" class="form-label">Your Review (Optional)</label>
                            <textarea id="editComment" name="Comment" class="form-control" rows="4" maxlength="1000">@userReview.Comment</textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle"></i> Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Styles {
    <style>
        /* Star Rating Styles */
        .rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

        .rating input {
            display: none;
        }

        .rating label {
            cursor: pointer;
            font-size: 1.5rem;
            padding: 0 0.1rem;
            color: #ddd;
        }

        .rating label:hover,
        .rating label:hover ~ label,
        .rating input:checked ~ label {
            color: #ffc107;
        }
        
        .review-item:last-child {
            margin-bottom: 0;
        }
    </style>
}

@section Scripts {
    <script>
        // Validate date range
        document.getElementById('startDate')?.addEventListener('change', function() {
            const startDate = new Date(this.value);
            const endDateInput = document.getElementById('endDate');
            const minEndDate = new Date(startDate);
            minEndDate.setDate(minEndDate.getDate() + 1);
            const maxEndDate = new Date(startDate);
            maxEndDate.setDate(maxEndDate.getDate() + 14);
            
            endDateInput.min = minEndDate.toISOString().split('T')[0];
            endDateInput.max = maxEndDate.toISOString().split('T')[0];
        });

        document.getElementById('endDate')?.addEventListener('change', function() {
            const startDate = new Date(document.getElementById('startDate').value);
            const endDate = new Date(this.value);
            const diffTime = Math.abs(endDate - startDate);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            
            if (diffDays > 14) {
                alert('Loan period cannot exceed 14 days.');
                this.value = '';
            }
        });
        
        // Review form debugging
        const reviewForm = document.getElementById('reviewForm');
        if (reviewForm) {
            reviewForm.addEventListener('submit', function(e) {
                // Don't prevent default - we want the form to submit normally
                
                // Log form data for debugging
                console.log('Submitting review...');
                const formData = new FormData(reviewForm);
                for (let [key, value] of formData.entries()) {
                    console.log(`${key}: ${value}`);
                }
                
                // Check if rating is selected
                const rating = formData.get('Rating');
                if (!rating) {
                    console.error('No rating selected!');
                    // Don't prevent default, let server-side validation handle it
                }
            });
        }
    </script>
} 